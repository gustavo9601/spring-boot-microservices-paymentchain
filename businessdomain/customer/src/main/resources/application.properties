spring.application.name=customer
# Si se deja en 0 eureka asignara un puerto dinamicamente, para no tener salida, no se le crea puerto de salida
# en el docker-compose o un service en kubernetes
# server.port=0
server.port=8080

# Spring doc
# Especifica por el paquete que controladores se documentaran
springdoc.packages-to-scan=com.paymentchain.customer.controllers
springdoc.api-docs.enabled=true


# Connection Mysql
spring.datasource.url=jdbc:mysql://localhost:3306/paymentchain_customers?useSSL=false&serverTimezone=America/Bogota
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


api-url.transacions=http://transaction/api/
api-url.products=http://product/api/


# Configuraciones de eureka
eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}

# Actuator
management.endpoints.web.exposure.include=*


# Spring Security
# spring.security.user.name=admin
# spring.security.user.password=admin
# spring.security.user.roles=ADMIN,USER